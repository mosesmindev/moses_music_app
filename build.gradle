// Top-level build file where you can add configuration options common to all sub-projects/modules.

// 1、在项目的根build.gradle中引入moses.gradle文件（作用见文件顶部注释），使配置在整个项目的所有module的build.gradle中生效
// 2、file方法用于文件定位，是Project类中的一个方法，它会从当前工程下找对应的gradle文件
// 3、 Project类是 ： \gradle-5.4.1\src\core-api\org\gradle\api\Project.java
// 4、为根工程rootProject引入moses.gradle后，相当于根工程（moses_music_app）下的Project对象，都有了ext（moses.gradle文件中定义）下的属性：android、depsVersion、depsLibsAddress
// 5、后面就可以去各个子module中去使用根工程（moses_music_app）中定义号的属性
// 6、因为gradle有一个特性：父工程（moses_music_app）中定义的属性，子工程（例如module：lib_audio）中也可以使用。因为父子的（数据结构）是树的关系
apply from : this.rootProject.file('moses.gradle')  // 这里this指moses_music_app 这整个项目的当前对象

buildscript {//为gradle的构建引入插件plugin
    repositories {
        google()
        jcenter()
        mavenCentral()//maven中心仓库
        maven {
            // 设置maven私服仓库地址
            url 'http://localhost:8081/repository/imoses_releases/'
            // 为maven私服仓库设置用户名和密码
            credentials{
                username 'admin'
                password 'admin123'
            }
        }

        maven {
            // 设置maven私服仓库地址
            url 'http://localhost:8081/repository/imoses_snapshots/'
            // 为maven私服仓库设置用户名和密码
            credentials{
                username 'admin'
                password 'admin123'
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'//AS默认生成的android gradle是3.4.1   3.4.1必须使用AndroidX 我们这里使用3.2.0
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {// 为Java或者Kotlin工程引入仓库Repositories
    repositories {
        google()
        jcenter()
        mavenCentral()//maven中心仓库
        maven {
            // 设置maven私服仓库地址
            url 'http://localhost:8081/repository/imoses_releases/'
            // 为maven私服仓库设置用户名和密码
            credentials{
                username 'admin'
                password 'admin123'
            }
        }

        maven {
            // 设置maven私服仓库地址
            url 'http://localhost:8081/repository/imoses_snapshots/'
            // 为maven私服仓库设置用户名和密码
            credentials{
                username 'admin'
                password 'admin123'
            }
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
